{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\movieapp\\\\react-query-movies-app\\\\src\\\\pages\\\\Home\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport SearchBox from \"components/SearchBox\";\nimport service from \"utils/service\";\nimport CONSTANTS from \"utils/constants\";\nimport { useInfiniteQuery } from \"react-query\";\nimport MovieCard from \"components/MovieCard\";\nimport Skeleton from \"components/MovieCard/Skeleton\";\nimport { Grid } from \"@material-ui/core\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [searchText, setSearchText] = useState(\"man\"); // Initial value set to 'man' to display default search results on UI\n  const [currentPage, setCurrentPage] = useState(0);\n  useEffect(() => {\n    setCurrentPage(0);\n    remove();\n    setTimeout(() => {\n      refetch();\n    }, 1000);\n  }, [searchText]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleSearchChange = text => {\n    setSearchText(text);\n  };\n  const fetchMovies = ({\n    pageParam = 1\n  }) => service.get(CONSTANTS.BASE_URL, {\n    s: searchText,\n    page: pageParam\n  });\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isSuccess,\n    isLoading,\n    refetch,\n    remove\n  } = useInfiniteQuery(`movies`, fetchMovies, {\n    getNextPageParam: (lastPage, pages) => {\n      return +lastPage.totalResults > currentPage * 10 ? currentPage + 1 : null;\n    },\n    enabled: !!searchText.length,\n    onSuccess: () => {\n      setCurrentPage(currentPage + 1);\n    }\n  });\n  const MoviesLoader = itemCount => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [...new Array(itemCount)].map((_, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(SearchBox, {\n              className: styles.searchBox,\n              onChange: handleSearchChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: styles.movieListContainer,\n          children: [isLoading && MoviesLoader(8), isSuccess && (!!data ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n            dataLength: data.pages.reduce((a, b) => {\n              return {\n                Search: [...a.Search, ...b.Search]\n              };\n            }).Search.length,\n            next: fetchNextPage,\n            hasMore: hasNextPage || false,\n            loader: MoviesLoader(4),\n            style: {\n              overflow: \"hidden\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: data.pages.reduce((a, b) => {\n                return {\n                  Search: [...a.Search, ...b.Search]\n                };\n              }).Search.map(({\n                Title,\n                imdbID,\n                Type,\n                Year,\n                Poster\n              }) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(MovieCard, {\n                  Title,\n                  imdbID,\n                  Type,\n                  Year,\n                  Poster\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 29\n                }, this)\n              }, imdbID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this) : \"No Result\"), !!error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.errorMessageContainer,\n            children: JSON.stringify(error)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"pOKfVEHwh+63n4OMmTOw5GKQGT4=\", false, function () {\n  return [useInfiniteQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","styles","SearchBox","service","CONSTANTS","useInfiniteQuery","MovieCard","Skeleton","Grid","InfiniteScroll","jsxDEV","_jsxDEV","Home","_s","searchText","setSearchText","currentPage","setCurrentPage","remove","setTimeout","refetch","handleSearchChange","text","fetchMovies","pageParam","get","BASE_URL","s","page","data","error","fetchNextPage","hasNextPage","isSuccess","isLoading","getNextPageParam","lastPage","pages","totalResults","enabled","length","onSuccess","MoviesLoader","itemCount","container","spacing","children","Array","map","_","i","item","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","className","root","justify","sm","searchBox","onChange","movieListContainer","dataLength","reduce","a","b","Search","next","hasMore","loader","style","overflow","Title","imdbID","Type","Year","Poster","errorMessageContainer","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/Project/movieapp/react-query-movies-app/src/pages/Home/index.tsx"],"sourcesContent":["import { useState, useEffect, ReactElement } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport service from \"utils/service\";\r\nimport CONSTANTS from \"utils/constants\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\nimport MovieCard, { MovieCardProps } from \"components/MovieCard\";\r\nimport Skeleton from \"components/MovieCard/Skeleton\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst Home = (): ReactElement => {\r\n  const [searchText, setSearchText] = useState(\"man\"); // Initial value set to 'man' to display default search results on UI\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(0);\r\n    remove();\r\n    setTimeout(() => {\r\n      refetch();\r\n    }, 1000);\r\n  }, [searchText]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSearchChange = (text: string) => {\r\n    setSearchText(text);\r\n  };\r\n\r\n  const fetchMovies = ({ pageParam = 1 }) =>\r\n    service.get(CONSTANTS.BASE_URL, {\r\n      s: searchText,\r\n      page: pageParam,\r\n    });\r\n\r\n  const {\r\n    data,\r\n    error,\r\n    fetchNextPage,\r\n    hasNextPage,\r\n    isSuccess,\r\n    isLoading,\r\n    refetch,\r\n    remove,\r\n  } = useInfiniteQuery(`movies`, fetchMovies, {\r\n    getNextPageParam: (lastPage, pages) => {\r\n      return +lastPage.totalResults > currentPage * 10 ? currentPage + 1 : null;\r\n    },\r\n    enabled: !!searchText.length,\r\n    onSuccess: () => {\r\n      setCurrentPage(currentPage + 1);\r\n    },\r\n  });\r\n\r\n  const MoviesLoader = (itemCount: number): ReactElement => {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        {[...new Array(itemCount)].map((_, i: number) => (\r\n          <Grid item xs={12} md={3} key={i}>\r\n            <Skeleton />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={12} sm={10}>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={4}>\r\n              <SearchBox\r\n                className={styles.searchBox}\r\n                onChange={handleSearchChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} className={styles.movieListContainer}>\r\n            {/* Loading state */}\r\n            {isLoading && MoviesLoader(8)}\r\n\r\n            {/* Success state */}\r\n            {isSuccess &&\r\n              (!!data ? (\r\n                <InfiniteScroll\r\n                  dataLength={\r\n                    data.pages.reduce((a, b) => {\r\n                      return { Search: [...a.Search, ...b.Search] };\r\n                    }).Search.length\r\n                  }\r\n                  next={fetchNextPage}\r\n                  hasMore={hasNextPage || false}\r\n                  loader={MoviesLoader(4)}\r\n                  style={{ overflow: \"hidden\" }}\r\n                >\r\n                  <Grid container spacing={2}>\r\n                    {data.pages\r\n                      .reduce((a, b) => {\r\n                        return { Search: [...a.Search, ...b.Search] };\r\n                      })\r\n                      .Search.map(\r\n                        ({\r\n                          Title,\r\n                          imdbID,\r\n                          Type,\r\n                          Year,\r\n                          Poster,\r\n                        }: MovieCardProps) => (\r\n                          <Grid item xs={12} md={3} key={imdbID}>\r\n                            <MovieCard\r\n                              {...{ Title, imdbID, Type, Year, Poster }}\r\n                            />\r\n                          </Grid>\r\n                        )\r\n                      )}\r\n                  </Grid>\r\n                </InfiniteScroll>\r\n              ) : (\r\n                \"No Result\"\r\n              ))}\r\n\r\n            {/* Error state */}\r\n            {!!error && (\r\n              <div className={styles.errorMessageContainer}>\r\n                {JSON.stringify(error)}\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}